spring:
  main:
    banner-mode: "console"
  datasource:
    driver-class-name: org.testcontainers.jdbc.ContainerDatabaseDriver
    url: jdbc:tc:mysql:5.7.22://testcontainers/hi_perf_java_pers?rewriteBatchedStatements=true&profileSQL=true&logger=com.mysql.cj.log.Slf4JLogger
    hikari:
      auto-commit: false  #do not auto commit on connection release (must be manual)
      data-source-properties:
        socketTimeout: 30_000
  jpa:
    database-platform: org.hibernate.dialect.MySQL57Dialect
    show-sql: true
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        #globally_quoted_identifiers: true #needed only if one of our fields has same name as some SQL function etc (eg MOD)
        hbm2ddl:
          #this is needed only if we want to use multiline sql scripts inside sql/ folder scripts dir
          #import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
          import_files: sql/procedures.sql
        enable_lazy_load_no_trans: false #do not allow lazy load without existing transaction
        connection:
          #https://vladmihalcea.com/why-you-should-always-use-hibernate-connection-provider_disables_autocommit-for-resource-local-jpa-transactions/
          #tell hibernate that we set "auto-commit: false" for hikari
          provider_disables_autocommit: true
        show_sql: true
        use_sql_comments: true  #forwarded to db, so wastes network bandwidth
        format_sql: true
        #order inserts not to be interleaved (parent,children,parent,children) so batching works when inserting one-to-many entities
        #and then reordered to (parent,parent) and then (children,children) which can be batched
        order_inserts: true
        #same as inserts, but for updating
        order_updates: true
        jdbc:
          batch_size: 100
        query:
          #https://vladmihalcea.com/hibernate-query-fail-on-pagination-over-collection-fetch/
          #prevent hibernate to load 1000 records, just to discard 80% of them when limiting results
          fail_on_pagination_over_collection_fetch: true
          #https://vladmihalcea.com/improve-statement-caching-efficiency-in-clause-parameter-padding/
          #makes possible to reuse query like IN(?) for many arguments that is reusing same execution
          #plan -> e.g. when call IN(1,2) and IN(1,2,3) translated to -> IN(1,2,2) and (1,2,3)
          in_clause_parameter_padding: true
    generate-ddl: true
  data:
    jpa:
      repositories:
        #startup time is decreased, since we don't wait all repos to be initialized and checked
        #especially since we will usually use only 1 out of 100 repos in test - we can just init
        #repos at the time we need specific repo. good for testing and local development
        #deffered option is used for ASYNC apps
        bootstrap-mode: lazy
logging:
  level:
    org.hibernate.type.descriptor.sql: trace
    com.zaxxer.hikari: debug
