/*
 * This file is generated by jOOQ.
 */
package me.vukas.jooq.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import me.vukas.jooq.db.HiPerfJavaPers;
import me.vukas.jooq.db.Indexes;
import me.vukas.jooq.db.Keys;
import me.vukas.jooq.db.tables.records.HibernateSequencesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HibernateSequences extends TableImpl<HibernateSequencesRecord> {

    private static final long serialVersionUID = 418148954;

    /**
     * The reference instance of <code>hi_perf_java_pers.hibernate_sequences</code>
     */
    public static final HibernateSequences HIBERNATE_SEQUENCES = new HibernateSequences();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HibernateSequencesRecord> getRecordType() {
        return HibernateSequencesRecord.class;
    }

    /**
     * The column <code>hi_perf_java_pers.hibernate_sequences.sequence_name</code>.
     */
    public final TableField<HibernateSequencesRecord, String> SEQUENCE_NAME = createField("sequence_name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>hi_perf_java_pers.hibernate_sequences.next_val</code>.
     */
    public final TableField<HibernateSequencesRecord, Long> NEXT_VAL = createField("next_val", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>hi_perf_java_pers.hibernate_sequences</code> table reference
     */
    public HibernateSequences() {
        this(DSL.name("hibernate_sequences"), null);
    }

    /**
     * Create an aliased <code>hi_perf_java_pers.hibernate_sequences</code> table reference
     */
    public HibernateSequences(String alias) {
        this(DSL.name(alias), HIBERNATE_SEQUENCES);
    }

    /**
     * Create an aliased <code>hi_perf_java_pers.hibernate_sequences</code> table reference
     */
    public HibernateSequences(Name alias) {
        this(alias, HIBERNATE_SEQUENCES);
    }

    private HibernateSequences(Name alias, Table<HibernateSequencesRecord> aliased) {
        this(alias, aliased, null);
    }

    private HibernateSequences(Name alias, Table<HibernateSequencesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> HibernateSequences(Table<O> child, ForeignKey<O, HibernateSequencesRecord> key) {
        super(child, key, HIBERNATE_SEQUENCES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return HiPerfJavaPers.HI_PERF_JAVA_PERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.HIBERNATE_SEQUENCES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HibernateSequencesRecord> getPrimaryKey() {
        return Keys.KEY_HIBERNATE_SEQUENCES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HibernateSequencesRecord>> getKeys() {
        return Arrays.<UniqueKey<HibernateSequencesRecord>>asList(Keys.KEY_HIBERNATE_SEQUENCES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HibernateSequences as(String alias) {
        return new HibernateSequences(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HibernateSequences as(Name alias) {
        return new HibernateSequences(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HibernateSequences rename(String name) {
        return new HibernateSequences(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HibernateSequences rename(Name name) {
        return new HibernateSequences(name, null);
    }
}
