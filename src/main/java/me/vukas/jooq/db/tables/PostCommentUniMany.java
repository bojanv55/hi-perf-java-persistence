/*
 * This file is generated by jOOQ.
 */
package me.vukas.jooq.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import me.vukas.jooq.db.HiPerfJavaPers;
import me.vukas.jooq.db.Indexes;
import me.vukas.jooq.db.Keys;
import me.vukas.jooq.db.tables.records.PostCommentUniManyRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostCommentUniMany extends TableImpl<PostCommentUniManyRecord> {

    private static final long serialVersionUID = -1948321046;

    /**
     * The reference instance of <code>hi_perf_java_pers.post_comment_uni_many</code>
     */
    public static final PostCommentUniMany POST_COMMENT_UNI_MANY = new PostCommentUniMany();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PostCommentUniManyRecord> getRecordType() {
        return PostCommentUniManyRecord.class;
    }

    /**
     * The column <code>hi_perf_java_pers.post_comment_uni_many.id</code>.
     */
    public final TableField<PostCommentUniManyRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>hi_perf_java_pers.post_comment_uni_many.post_id1</code>.
     */
    public final TableField<PostCommentUniManyRecord, Long> POST_ID1 = createField("post_id1", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>hi_perf_java_pers.post_comment_uni_many.post_id2</code>.
     */
    public final TableField<PostCommentUniManyRecord, Long> POST_ID2 = createField("post_id2", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>hi_perf_java_pers.post_comment_uni_many</code> table reference
     */
    public PostCommentUniMany() {
        this(DSL.name("post_comment_uni_many"), null);
    }

    /**
     * Create an aliased <code>hi_perf_java_pers.post_comment_uni_many</code> table reference
     */
    public PostCommentUniMany(String alias) {
        this(DSL.name(alias), POST_COMMENT_UNI_MANY);
    }

    /**
     * Create an aliased <code>hi_perf_java_pers.post_comment_uni_many</code> table reference
     */
    public PostCommentUniMany(Name alias) {
        this(alias, POST_COMMENT_UNI_MANY);
    }

    private PostCommentUniMany(Name alias, Table<PostCommentUniManyRecord> aliased) {
        this(alias, aliased, null);
    }

    private PostCommentUniMany(Name alias, Table<PostCommentUniManyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PostCommentUniMany(Table<O> child, ForeignKey<O, PostCommentUniManyRecord> key) {
        super(child, key, POST_COMMENT_UNI_MANY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return HiPerfJavaPers.HI_PERF_JAVA_PERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.POST_COMMENT_UNI_MANY_FKE4H8SRREB0UVU98PBCCFIUQ16, Indexes.POST_COMMENT_UNI_MANY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PostCommentUniManyRecord, Long> getIdentity() {
        return Keys.IDENTITY_POST_COMMENT_UNI_MANY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PostCommentUniManyRecord> getPrimaryKey() {
        return Keys.KEY_POST_COMMENT_UNI_MANY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PostCommentUniManyRecord>> getKeys() {
        return Arrays.<UniqueKey<PostCommentUniManyRecord>>asList(Keys.KEY_POST_COMMENT_UNI_MANY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PostCommentUniManyRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PostCommentUniManyRecord, ?>>asList(Keys.FKE4H8SRREB0UVU98PBCCFIUQ16);
    }

    public PostOneUni postOneUni() {
        return new PostOneUni(this, Keys.FKE4H8SRREB0UVU98PBCCFIUQ16);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostCommentUniMany as(String alias) {
        return new PostCommentUniMany(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostCommentUniMany as(Name alias) {
        return new PostCommentUniMany(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PostCommentUniMany rename(String name) {
        return new PostCommentUniMany(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PostCommentUniMany rename(Name name) {
        return new PostCommentUniMany(name, null);
    }
}
