/*
 * This file is generated by jOOQ.
 */
package me.vukas.jooq.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import me.vukas.jooq.db.HiPerfJavaPers;
import me.vukas.jooq.db.Indexes;
import me.vukas.jooq.db.Keys;
import me.vukas.jooq.db.tables.records.Child2msRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Child2ms extends TableImpl<Child2msRecord> {

    private static final long serialVersionUID = -1122551849;

    /**
     * The reference instance of <code>hi_perf_java_pers.child2ms</code>
     */
    public static final Child2ms CHILD2MS = new Child2ms();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Child2msRecord> getRecordType() {
        return Child2msRecord.class;
    }

    /**
     * The column <code>hi_perf_java_pers.child2ms.id</code>.
     */
    public final TableField<Child2msRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>hi_perf_java_pers.child2ms.name</code>.
     */
    public final TableField<Child2msRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>hi_perf_java_pers.child2ms.child2prop</code>.
     */
    public final TableField<Child2msRecord, String> CHILD2PROP = createField("child2prop", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>hi_perf_java_pers.child2ms</code> table reference
     */
    public Child2ms() {
        this(DSL.name("child2ms"), null);
    }

    /**
     * Create an aliased <code>hi_perf_java_pers.child2ms</code> table reference
     */
    public Child2ms(String alias) {
        this(DSL.name(alias), CHILD2MS);
    }

    /**
     * Create an aliased <code>hi_perf_java_pers.child2ms</code> table reference
     */
    public Child2ms(Name alias) {
        this(alias, CHILD2MS);
    }

    private Child2ms(Name alias, Table<Child2msRecord> aliased) {
        this(alias, aliased, null);
    }

    private Child2ms(Name alias, Table<Child2msRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Child2ms(Table<O> child, ForeignKey<O, Child2msRecord> key) {
        super(child, key, CHILD2MS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return HiPerfJavaPers.HI_PERF_JAVA_PERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CHILD2MS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Child2msRecord, Long> getIdentity() {
        return Keys.IDENTITY_CHILD2MS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Child2msRecord> getPrimaryKey() {
        return Keys.KEY_CHILD2MS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Child2msRecord>> getKeys() {
        return Arrays.<UniqueKey<Child2msRecord>>asList(Keys.KEY_CHILD2MS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Child2ms as(String alias) {
        return new Child2ms(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Child2ms as(Name alias) {
        return new Child2ms(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Child2ms rename(String name) {
        return new Child2ms(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Child2ms rename(Name name) {
        return new Child2ms(name, null);
    }
}
