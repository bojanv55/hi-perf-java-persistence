/*
 * This file is generated by jOOQ.
 */
package me.vukas.jooq.db.tables.records;


import javax.annotation.Generated;

import me.vukas.jooq.db.tables.ParentSt;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ParentStRecord extends UpdatableRecordImpl<ParentStRecord> implements Record5<String, Long, String, String, String> {

    private static final long serialVersionUID = -603264533;

    /**
     * Setter for <code>hi_perf_java_pers.parent_st.dtype</code>.
     */
    public void setDtype(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>hi_perf_java_pers.parent_st.dtype</code>.
     */
    public String getDtype() {
        return (String) get(0);
    }

    /**
     * Setter for <code>hi_perf_java_pers.parent_st.id</code>.
     */
    public void setId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>hi_perf_java_pers.parent_st.id</code>.
     */
    public Long getId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>hi_perf_java_pers.parent_st.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>hi_perf_java_pers.parent_st.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>hi_perf_java_pers.parent_st.child1prop</code>.
     */
    public void setChild1prop(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>hi_perf_java_pers.parent_st.child1prop</code>.
     */
    public String getChild1prop() {
        return (String) get(3);
    }

    /**
     * Setter for <code>hi_perf_java_pers.parent_st.child2prop</code>.
     */
    public void setChild2prop(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>hi_perf_java_pers.parent_st.child2prop</code>.
     */
    public String getChild2prop() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, Long, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, Long, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return ParentSt.PARENT_ST.DTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return ParentSt.PARENT_ST.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ParentSt.PARENT_ST.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return ParentSt.PARENT_ST.CHILD1PROP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return ParentSt.PARENT_ST.CHILD2PROP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getDtype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getChild1prop();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getChild2prop();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getDtype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getChild1prop();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getChild2prop();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParentStRecord value1(String value) {
        setDtype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParentStRecord value2(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParentStRecord value3(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParentStRecord value4(String value) {
        setChild1prop(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParentStRecord value5(String value) {
        setChild2prop(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParentStRecord values(String value1, Long value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ParentStRecord
     */
    public ParentStRecord() {
        super(ParentSt.PARENT_ST);
    }

    /**
     * Create a detached, initialised ParentStRecord
     */
    public ParentStRecord(String dtype, Long id, String name, String child1prop, String child2prop) {
        super(ParentSt.PARENT_ST);

        set(0, dtype);
        set(1, id);
        set(2, name);
        set(3, child1prop);
        set(4, child2prop);
    }
}
