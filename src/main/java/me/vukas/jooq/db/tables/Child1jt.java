/*
 * This file is generated by jOOQ.
 */
package me.vukas.jooq.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import me.vukas.jooq.db.HiPerfJavaPers;
import me.vukas.jooq.db.Indexes;
import me.vukas.jooq.db.Keys;
import me.vukas.jooq.db.tables.records.Child1jtRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Child1jt extends TableImpl<Child1jtRecord> {

    private static final long serialVersionUID = -1329249439;

    /**
     * The reference instance of <code>hi_perf_java_pers.child1jt</code>
     */
    public static final Child1jt CHILD1JT = new Child1jt();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Child1jtRecord> getRecordType() {
        return Child1jtRecord.class;
    }

    /**
     * The column <code>hi_perf_java_pers.child1jt.child1prop</code>.
     */
    public final TableField<Child1jtRecord, String> CHILD1PROP = createField("child1prop", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>hi_perf_java_pers.child1jt.id</code>.
     */
    public final TableField<Child1jtRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>hi_perf_java_pers.child1jt</code> table reference
     */
    public Child1jt() {
        this(DSL.name("child1jt"), null);
    }

    /**
     * Create an aliased <code>hi_perf_java_pers.child1jt</code> table reference
     */
    public Child1jt(String alias) {
        this(DSL.name(alias), CHILD1JT);
    }

    /**
     * Create an aliased <code>hi_perf_java_pers.child1jt</code> table reference
     */
    public Child1jt(Name alias) {
        this(alias, CHILD1JT);
    }

    private Child1jt(Name alias, Table<Child1jtRecord> aliased) {
        this(alias, aliased, null);
    }

    private Child1jt(Name alias, Table<Child1jtRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Child1jt(Table<O> child, ForeignKey<O, Child1jtRecord> key) {
        super(child, key, CHILD1JT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return HiPerfJavaPers.HI_PERF_JAVA_PERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CHILD1JT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Child1jtRecord> getPrimaryKey() {
        return Keys.KEY_CHILD1JT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Child1jtRecord>> getKeys() {
        return Arrays.<UniqueKey<Child1jtRecord>>asList(Keys.KEY_CHILD1JT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<Child1jtRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<Child1jtRecord, ?>>asList(Keys.FKA5914KNN9X6NGC5DM0BIJQCLN);
    }

    public ParentJt parentJt() {
        return new ParentJt(this, Keys.FKA5914KNN9X6NGC5DM0BIJQCLN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Child1jt as(String alias) {
        return new Child1jt(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Child1jt as(Name alias) {
        return new Child1jt(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Child1jt rename(String name) {
        return new Child1jt(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Child1jt rename(Name name) {
        return new Child1jt(name, null);
    }
}
