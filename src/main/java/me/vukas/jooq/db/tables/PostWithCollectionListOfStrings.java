/*
 * This file is generated by jOOQ.
 */
package me.vukas.jooq.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import me.vukas.jooq.db.HiPerfJavaPers;
import me.vukas.jooq.db.Indexes;
import me.vukas.jooq.db.Keys;
import me.vukas.jooq.db.tables.records.PostWithCollectionListOfStringsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostWithCollectionListOfStrings extends TableImpl<PostWithCollectionListOfStringsRecord> {

    private static final long serialVersionUID = -1398994440;

    /**
     * The reference instance of <code>hi_perf_java_pers.post_with_collection_list_of_strings</code>
     */
    public static final PostWithCollectionListOfStrings POST_WITH_COLLECTION_LIST_OF_STRINGS = new PostWithCollectionListOfStrings();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PostWithCollectionListOfStringsRecord> getRecordType() {
        return PostWithCollectionListOfStringsRecord.class;
    }

    /**
     * The column <code>hi_perf_java_pers.post_with_collection_list_of_strings.post_with_collection_id</code>.
     */
    public final TableField<PostWithCollectionListOfStringsRecord, Long> POST_WITH_COLLECTION_ID = createField("post_with_collection_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>hi_perf_java_pers.post_with_collection_list_of_strings.list_of_strings</code>.
     */
    public final TableField<PostWithCollectionListOfStringsRecord, String> LIST_OF_STRINGS = createField("list_of_strings", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>hi_perf_java_pers.post_with_collection_list_of_strings</code> table reference
     */
    public PostWithCollectionListOfStrings() {
        this(DSL.name("post_with_collection_list_of_strings"), null);
    }

    /**
     * Create an aliased <code>hi_perf_java_pers.post_with_collection_list_of_strings</code> table reference
     */
    public PostWithCollectionListOfStrings(String alias) {
        this(DSL.name(alias), POST_WITH_COLLECTION_LIST_OF_STRINGS);
    }

    /**
     * Create an aliased <code>hi_perf_java_pers.post_with_collection_list_of_strings</code> table reference
     */
    public PostWithCollectionListOfStrings(Name alias) {
        this(alias, POST_WITH_COLLECTION_LIST_OF_STRINGS);
    }

    private PostWithCollectionListOfStrings(Name alias, Table<PostWithCollectionListOfStringsRecord> aliased) {
        this(alias, aliased, null);
    }

    private PostWithCollectionListOfStrings(Name alias, Table<PostWithCollectionListOfStringsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PostWithCollectionListOfStrings(Table<O> child, ForeignKey<O, PostWithCollectionListOfStringsRecord> key) {
        super(child, key, POST_WITH_COLLECTION_LIST_OF_STRINGS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return HiPerfJavaPers.HI_PERF_JAVA_PERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.POST_WITH_COLLECTION_LIST_OF_STRINGS_FKED0FRWO7QVBY7K5GPFRVWUT2I);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PostWithCollectionListOfStringsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PostWithCollectionListOfStringsRecord, ?>>asList(Keys.FKED0FRWO7QVBY7K5GPFRVWUT2I);
    }

    public PostWithCollection postWithCollection() {
        return new PostWithCollection(this, Keys.FKED0FRWO7QVBY7K5GPFRVWUT2I);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostWithCollectionListOfStrings as(String alias) {
        return new PostWithCollectionListOfStrings(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostWithCollectionListOfStrings as(Name alias) {
        return new PostWithCollectionListOfStrings(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PostWithCollectionListOfStrings rename(String name) {
        return new PostWithCollectionListOfStrings(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PostWithCollectionListOfStrings rename(Name name) {
        return new PostWithCollectionListOfStrings(name, null);
    }
}
