/*
 * This file is generated by jOOQ.
 */
package me.vukas.jooq.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import me.vukas.jooq.db.HiPerfJavaPers;
import me.vukas.jooq.db.Indexes;
import me.vukas.jooq.db.Keys;
import me.vukas.jooq.db.tables.records.PostWithCollectionListOfComplexRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostWithCollectionListOfComplex extends TableImpl<PostWithCollectionListOfComplexRecord> {

    private static final long serialVersionUID = -78238788;

    /**
     * The reference instance of <code>hi_perf_java_pers.post_with_collection_list_of_complex</code>
     */
    public static final PostWithCollectionListOfComplex POST_WITH_COLLECTION_LIST_OF_COMPLEX = new PostWithCollectionListOfComplex();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PostWithCollectionListOfComplexRecord> getRecordType() {
        return PostWithCollectionListOfComplexRecord.class;
    }

    /**
     * The column <code>hi_perf_java_pers.post_with_collection_list_of_complex.post_with_collection_id</code>.
     */
    public final TableField<PostWithCollectionListOfComplexRecord, Long> POST_WITH_COLLECTION_ID = createField("post_with_collection_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>hi_perf_java_pers.post_with_collection_list_of_complex.attrib1</code>.
     */
    public final TableField<PostWithCollectionListOfComplexRecord, String> ATTRIB1 = createField("attrib1", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>hi_perf_java_pers.post_with_collection_list_of_complex.attrib2</code>.
     */
    public final TableField<PostWithCollectionListOfComplexRecord, Integer> ATTRIB2 = createField("attrib2", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>hi_perf_java_pers.post_with_collection_list_of_complex.attrib3</code>.
     */
    public final TableField<PostWithCollectionListOfComplexRecord, Double> ATTRIB3 = createField("attrib3", org.jooq.impl.SQLDataType.FLOAT, this, "");

    /**
     * Create a <code>hi_perf_java_pers.post_with_collection_list_of_complex</code> table reference
     */
    public PostWithCollectionListOfComplex() {
        this(DSL.name("post_with_collection_list_of_complex"), null);
    }

    /**
     * Create an aliased <code>hi_perf_java_pers.post_with_collection_list_of_complex</code> table reference
     */
    public PostWithCollectionListOfComplex(String alias) {
        this(DSL.name(alias), POST_WITH_COLLECTION_LIST_OF_COMPLEX);
    }

    /**
     * Create an aliased <code>hi_perf_java_pers.post_with_collection_list_of_complex</code> table reference
     */
    public PostWithCollectionListOfComplex(Name alias) {
        this(alias, POST_WITH_COLLECTION_LIST_OF_COMPLEX);
    }

    private PostWithCollectionListOfComplex(Name alias, Table<PostWithCollectionListOfComplexRecord> aliased) {
        this(alias, aliased, null);
    }

    private PostWithCollectionListOfComplex(Name alias, Table<PostWithCollectionListOfComplexRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PostWithCollectionListOfComplex(Table<O> child, ForeignKey<O, PostWithCollectionListOfComplexRecord> key) {
        super(child, key, POST_WITH_COLLECTION_LIST_OF_COMPLEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return HiPerfJavaPers.HI_PERF_JAVA_PERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.POST_WITH_COLLECTION_LIST_OF_COMPLEX_FKCYYJ9CLP6U114UCY5D6TX8XH9);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PostWithCollectionListOfComplexRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PostWithCollectionListOfComplexRecord, ?>>asList(Keys.FKCYYJ9CLP6U114UCY5D6TX8XH9);
    }

    public PostWithCollection postWithCollection() {
        return new PostWithCollection(this, Keys.FKCYYJ9CLP6U114UCY5D6TX8XH9);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostWithCollectionListOfComplex as(String alias) {
        return new PostWithCollectionListOfComplex(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostWithCollectionListOfComplex as(Name alias) {
        return new PostWithCollectionListOfComplex(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PostWithCollectionListOfComplex rename(String name) {
        return new PostWithCollectionListOfComplex(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PostWithCollectionListOfComplex rename(Name name) {
        return new PostWithCollectionListOfComplex(name, null);
    }
}
